version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    ports:
      - "9092:9092"
    networks:
      - kafka-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - kafka-network

  producer:
    build: .
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER: kafka:9092
      PYTHONUNBUFFERED: 1
    volumes:
      - ./movies.json:/app/movies.json
      - ./producer.py:/app/producer.py
    command: python producer.py
    networks:
      - kafka-network
    restart: unless-stopped

  consumer:
    build: .
    depends_on:
      - kafka
      - redis
    environment:
      KAFKA_BROKER: kafka:9092
      REDIS_HOST: redis
      PYTHONUNBUFFERED: 1
    volumes:
      - ./movies.json:/app/movies.json
      - ./simple_consumer.py:/app/consumer.py
    command: python consumer.py
    networks:
      - kafka-network
    restart: unless-stopped

  dashboard:
    build: .
    depends_on:
      - kafka
      - redis
      - consumer
    environment:
      KAFKA_BROKER: kafka:9092
      REDIS_HOST: redis
      PYTHONUNBUFFERED: 1
    ports:
      - "8050:8050"
    volumes:
      - ./movies.json:/app/movies.json
      - ./dashboard.py:/app/dashboard.py
    command: python dashboard.py
    networks:
      - kafka-network
    restart: unless-stopped

networks:
  kafka-network:
    driver: bridge